/// @insert separator

---

/// @slug cupidon-todo
## Features
This is a list of feature I'd like to implement in Cupidon.

**SOON** (but "time", you know ...) :

- [ ] `anchor scale` - with Animation curve support as well
- [ ] Motion looping
- [ ] Motion reverse
- [ ] lot of getters (anchor x, y, angle)
- [ ] add_Checkpoint return the checkpoint index.
- [ ] `edit_Checkpoint`
- [ ] `sort_Checkpoint`
- [ ] Rotation direction.

**LATER**
- [ ] Sequence of Parabolas
- [ ] draw parabola and checkpoint with sprite.

## TO DO
**IMPROVMENTS**
- [ ] Better way to remove an Animation Curve than setting `motion_Set_AnimeCurve` to `undefined`
- [ ] manage Orientation internally as well.

/// @slug parabola-intro
## Parabola
The methods that will set the parabola parameters.
The default use case is to have those called in the create event or on an event (mouse click, jump) to set the curve once.  
However, you could also call them each steps to update your Parabola in-real time (eg: trajetory of an arrow based on a power, etc)

it just needs a start point, an end point and a control point to have a functioning parabola, but several other alternatives methods are available, especially to define an end point base on distance or to directly set the [vertex](#) position of the curve

---

/// @slug point-intro
## Point

The following method allows to find or check the coordinate or orientation of any point on the curve.

?> You can completely use that instead of or in parallel with the Anchor if you want. 

---

/// @slug anchor-intro
## Anchor

The Anchor is a point whose coordinate and angle are stored in Cupidon's internal `x`, `y`and `angle` variables.

They are automatically updated when calling `anchor_Motion` and you retrieve those like this:

```gml
    // Instance step event
    x = myCupidon.x
    y = myCupidon.y
```

---

/// @insert anchor-setters-intro
### Setters

Methods that will set several parameters use by the Updaters methods to update the Anchor.
Those are to be called in the create event or on an event once.


---

/// @slug anchor-updaters-intro
### Updaters

Methods that update the Anchor's transforms. They should be call each steps.

---

/// @slug anchor-motion-intro
### Motion
Those methods relate to all motion behaviour regarding the Anchor.  
you can control the Anchor's , well ... motion on the parabola when `anchor_Motion` is used, basically like using a media player, with Play, Pause, etc, but also set an *Animation Curves* to smoothly animate the anchor's progress on the parabola.

---

/// @slug checkpoints-intro
## Checkpoints

Checkpoints is a feature that allows to define different position on the parabola that, once reached by the Anchor
can trigger a callback. They are like an anchor targeted and automated version of the method `point_Is_At`.  
There are optional parameters to manage a checkpoint's behaviour.

---

/// @slug draw-intro
## Drawing

You can draw the parabola with the start and end point with a color, but also any or all checkpoints (if set).  
However, that is really basic and I guess you would want to use your own implementation, using the `point_Get_*` methods.  
